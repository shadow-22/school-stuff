.include "m16def.inc"
.def temp=r23

.DSEG
_tmp_: .byte 2
; ---- OYeio oi?iaoio aaaiiYiui
.CSEG
reset:
ldi r24 , low(RAMEND) ; initialize stack pointer
out SPL , r24
ldi r24 , high(RAMEND)
out SPH , r24

ldi r24 ,(1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4)  
out DDRC ,r24                                               

ser r23
out ddrd,r23

rcall lcd_init  
ldi r24,0b00001100 ; display without cursor
rcall lcd_command

main:
;jmp main
;DISPLAY "NONE"
;====================================================	
none:
ldi r24,'N'
rcall lcd_data
ldi r24,'O'
rcall lcd_data
ldi r24,'N'
rcall lcd_data
ldi r24,'E'
rcall lcd_data


;GET CHARACTER FROM KEYPAD
;======================================================
get_char:
ldi r24,10
rcall scan_keypad_rising_edge
rcall keypad_to_ascii ;r24<---key ascii code
cpi r24,0
breq get_char
mov temp,r24
ldi r24,0x1
rcall lcd_command
ldi r24,1
rcall wait_msec
ldi r24,1
rcall wait_msec
ldi r24,0b00001100
rcall lcd_command
;again:
;jmp again
mov r24,temp 
rcall lcd_data
jmp get_char














;============================================================================================
write_2_nibbles: 
push r24         
in r25 ,PIND       
andi r25 ,0x0f  
andi r24 ,0xf0        
add r24 ,r25     
out PORTD ,r24            
sbi PORTD ,PD3   
cbi PORTD ,PD3  
pop r24                  
swap r24  
andi r24 ,0xf0   
add r24 ,r25 
out PORTD ,r24              
sbi PORTD ,PD3  
cbi PORTD ,PD3 
ret

;===============================================================================================
lcd_data:                
sbi PORTD ,PD2       
rcall write_2_nibbles     
ldi r24 ,43                
ldi r25 ,0                   
rcall wait_usec  
ret
;=================================================================================================
lcd_command: 
cbi PORTD ,PD2        
rcall write_2_nibbles    
ldi r24 ,39                   
ldi r25 ,0                    
rcall wait_usec          
ret   

;====================================================================================================
lcd_init:      
ldi r24 ,40            
ldi r25 ,0           
rcall wait_msec      
ldi r24 ,0x30          
out PORTD ,r24                  
sbi PORTD ,PD3        
cbi PORTD ,PD3         
ldi r24 ,39  
ldi r25 ,0                      
rcall wait_usec                                                  
                         
ldi r24 ,0x30         
out PORTD ,r24       
sbi PORTD ,PD3  
cbi PORTD ,PD3  
ldi r24 ,39  
ldi r25 ,0  
rcall wait_usec   
ldi r24 ,0x20                   
out PORTD ,r24          
sbi PORTD ,PD3  
cbi PORTD ,PD3  
ldi r24 ,39  
ldi r25 ,0  
rcall wait_usec       
ldi r24 ,0x28         
rcall lcd_command      
ldi r24 ,0x0c             
rcall lcd_command       
ldi r24 ,0x01              
rcall lcd_command  
ldi r24 ,low(1530)  
ldi r25 ,high(1530)  
rcall wait_usec      
ldi r24 ,0x06             
rcall lcd_command                                                                                       
ret  

;===================================================================================
scan_row:
ldi r25 ,0x08  
back_: 
lsl r25 
dec r24
brne back_
out PORTC ,r25 
nop
nop 
in r24 ,PINC 
andi r24 ,0x0f 
ret 
;================================================================================
scan_keypad:
ldi r24 ,0x01
rcall scan_row
swap r24 
mov r27 ,r24 
ldi r24 ,0x02 
rcall scan_row
add r27 ,r24 
ldi r24 ,0x03
rcall scan_row
swap r24 
mov r26 ,r24 
ldi r24 ,0x04 
rcall scan_row
add r26 ,r24 
movw r24 ,r26 
ret

;=====================================================================================
keypad_to_ascii: 
movw r26 ,r24 
ldi r24 ,'*'
sbrc r26 ,0
ret
ldi r24 ,'0'
sbrc r26 ,1
ret
ldi r24 ,'#'
sbrc r26 ,2
ret
ldi r24 ,'D'
sbrc r26 ,3 
ret 
ldi r24 ,'7'
sbrc r26 ,4
ret
ldi r24 ,'8'
sbrc r26 ,5
ret
ldi r24 ,'9'
sbrc r26 ,6
ret
ldi r24 ,'C'
sbrc r26 ,7
ret
ldi r24 ,'4' 
sbrc r27 ,0 
ret
ldi r24 ,'5'
sbrc r27 ,1
ret
ldi r24 ,'6'
sbrc r27 ,2
ret
ldi r24 ,'B'
sbrc r27 ,3
ret
ldi r24 ,'1'
sbrc r27 ,4
ret
ldi r24 ,'2'
sbrc r27 ,5
ret
ldi r24 ,'3'
sbrc r27 ,6
ret
ldi r24 ,'A'
sbrc r27 ,7
ret
clr r24
ret
;===================================================================================
wait_msec:
push r24
push r25
ldi r24,low(998)
ldi r25,high(998)
rcall wait_usec
pop r25
pop r24
sbiw r24,1
brne wait_msec
ret

wait_usec:
sbiw r24,1
nop
nop
nop
nop
brne wait_usec
ret
;=====================================================================================
scan_keypad_rising_edge:
mov r22 ,r24 ; a?ie?eaooa oi ?nuii o?eiecneoiiy ooii r22
rcall scan_keypad ; Yeaaia oi ?eceonieuaei aea ?eaoiYiioo aeaeu?oao
push r24 ; eae a?ie?eaooa oi a?ioYeaoia
push r25
mov r24 ,r22 ; eaeoooYncoa r22 ms (oo?eeYo oeiYo 10-20 msec ?io eaein??aoae a?u oii
ldi r25 ,0 ; eaoaoeaoaoo? oio ?eceonieia?io – ?niiiaeUneaea o?eiecneoi?i)
rcall wait_msec
rcall scan_keypad ; Yeaaia oi ?eceonieuaei iaiU eae a?unneoa
pop r23 ; uoa ?e?eona aioai??ioi o?eiecneoiu
pop r22
and r24 ,r22
and r25 ,r23
ldi r26 ,low(_tmp_) ; ounouoa oci eaoUooaoc oui aeaei?o?i ooci
ldi r27 ,high(_tmp_) ; ?nicaiyiaic ee?oc oco nioo?iao ooioo r27:r26
ld r23 ,X+
ld r22 ,X
st X ,r24 ; a?ie?eaooa ooc RAM oc iYa eaoUooaoc
st -X ,r25 ; oui aeaei?o?i
com r23
com r22 ; anao oioo aeaeu?oao ?io Y?ioi «iueeo» ?aocea?
and r24 ,r22
and r25 ,r23
ret
