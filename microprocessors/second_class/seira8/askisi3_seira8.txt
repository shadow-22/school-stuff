.include "m16def.inc"
.def loop=r16
.def pointer=r21
.org 0x0
rjmp reset
.org 0x10
rjmp ISR_TIMER1_OVF ; nioo?ia aio?cnYococo oco aeaei??o o?an?a?eeoco oio timer1
reset:
; ---- An?? oi?iaoio aaaiiYiui
.;DSEG
;_tmp_: .byte 2
; ---- OYeio oi?iaoio aaaiiYiui


;.CSEG

ldi r24 , low(RAMEND) ; initialize stack pointer
out SPL , r24
ldi r24 , high(RAMEND)
out SPH , r24
;ser r24 ; initialize PORTA for output
;out DDRA , r24
;clr r26 ; clear time counter



ldi r24 ,(1<<TOIE1) ; aianai?i?coc aeaei??o o?an?a?eeoco oio iaonco? TCNT1
out TIMSK ,r24 ; aea oii timer1


ldi r24 ,(1<<CS12) | (0<<CS11) | (1<<CS10) ; CK/1024
out TCCR1B ,r24




ldi r24 ,(1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4) ; eYoae uo aiuaioo oa 4 MSB
out DDRC ,r24 ; oco eynao PORTC

;=================================================================
new:
ldi loop,10
clr r24
clr r25
check: 
rcall scan_keypad
rcall keypad_to_ascii
wrong:
cpi r24,0x31
brne check
secondary:
rcall scan_keypad
rcall keypad_to_ascii
cpi r24,0x33
breq right
cpi r24,0x31
breq secondary
cpi r24,0x00
breq secondary
jmp check
right:
ldi loop,10

;cpi loop,0x00
;breq check
loop1:
cpi loop,0x00
breq check
on:
ldi pointer,1
ser r17
out ddra,r17
ser r17
out porta,r17
ldi r24,low(250)
ldi r25,high(250)
rcall wait_msec
;ldi r24,0xf8 ; an?eei?i?coc oio TCNT1 to
;out TCNT1H ,r24 ; aea o?an?a?eeoc iaoU a?u 5 sec
;ldi r24 ,0x5f
;out TCNT1L ,r24



off:
dec loop
ldi pointer,0
ser r17
out ddra,r17
clr r17
out porta,r17
ldi r24,low(250)
ldi r25,high(250)
rcall wait_msec

;ldi r24,0xf8 ; an?eei?i?coc oio TCNT1 to
;out TCNT1H ,r24 ; aea o?an?a?eeoc iaoU a?u 5 sec
;ldi r24 ,0x5f
;out TCNT1L ,r24

jmp loop1

ISR_TIMER1_OVF:
cpi loop,0x00
breq new
cpi pointer,1
breq off
jmp on
reti








;==================================================

scan_row:
ldi r25 ,0x08 ; an?eei?i?coc ia ‘0000 1000’
back_: lsl r25 ; aneooan? ie?oecoc oio ‘1’ ouoao eYoaeo
dec r24 ; uoio a?iae i aneeiuo oco anaii?o
brne back_
out PORTC ,r25 ; c aio?ooie?c anaii? o?eaoae ooi eiaeeu ‘1’
nop
nop ; eaeoooYncoc aea ia ?nieUaae ia a?iae c aeeaa? eaoUooaoco
in r24 ,PINC ; a?eoonYoioi ie eYoaeo (oo?eao) oui aeaei?o?i ?io a?iae ?eaoiYiie
andi r24 ,0x0f ; a?iiii?iiioae oa 4 LSB u?io oa ‘1’ aa??iioi ?io a?iae ?aociYiie
ret ; ie aeaeu?oao.

;================================================================

scan_keypad:
ldi r24 ,0x01 ; Yeaaia oci ?n?oc anaii? oio ?eceonieia?io
rcall scan_row
swap r24 ; a?ie?eaooa oi a?ioYeaoia
mov r27 ,r24 ; ooa 4 msb oio r27
ldi r24 ,0x02 ; Yeaaia oc aayoanc anaii? oio ?eceonieia?io
rcall scan_row
add r27 ,r24 ; a?ie?eaooa oi a?ioYeaoia ooa 4 lsb oio r27
ldi r24 ,0x03 ; Yeaaia oci on?oc anaii? oio ?eceonieia?io
rcall scan_row
swap r24 ; a?ie?eaooa oi a?ioYeaoia
mov r26 ,r24 ; ooa 4 msb oio r26
ldi r24 ,0x04 ; Yeaaia oci oYoanoc anaii? oio ?eceonieia?io
rcall scan_row
add r26 ,r24 ; a?ie?eaooa oi a?ioYeaoia ooa 4 lsb oio r26
movw r24 ,r26 ; iaoYoana oi a?ioYeaoia ooioo eaoa?uncoYo r25:r24
ret

;===============================================================

;scan_keypad_rising_edge:

;mov r22 ,r24 ; a?ie?eaooa oi ?nuii o?eiecneoiiy ooii r22
;rcall scan_keypad ; Yeaaia oi ?eceonieuaei aea ?eaoiYiioo aeaeu?oao
;push r24 ; eae a?ie?eaooa oi a?ioYeaoia
;push r25
;mov r24 ,r22 ; eaeoooYncoa r22 ms (oo?eeYo oeiYo 10-20 msec ?io eaein??aoae a?u oii
;ldi r25 ,0 ; eaoaoeaoaoo? oio ?eceonieia?io – ?niiiaeUneaea o?eiecneoi?i)
;rcall wait_msec
;rcall scan_keypad ; Yeaaia oi ?eceonieuaei iaiU eae a?unneoa
;pop r23 ; uoa ?e?eona aioai??ioi o?eiecneoiu
;pop r22
;and r24 ,r22
;and r25 ,r23
;ldi r26 ,low(_tmp_) ; ounouoa oci eaoUooaoc oui aeaei?o?i ooci
;ldi r27 ,high(_tmp_) ; ?nicaiyiaic ee?oc oco nioo?iao ooioo r27:r26
;ld r23 ,X+
;ld r22 ,X
;st X ,r24 ; a?ie?eaooa ooc RAM oc iYa eaoUooaoc
;st -X ,r25 ; oui aeaei?o?i
;com r23
;com r22 ; anao oioo aeaeu?oao ?io Y?ioi «iueeo» ?aocea?
;and r24 ,r22
;and r25 ,r23
;ret

;==============================================================

keypad_to_ascii: ; eiaeeu ‘1’ ooeo eYoaeo oio eaoa?unco? r26 ace?iioi
movw r26 ,r24 ; oa ?anaeUou oyiaiea eae aneeiiyo
ldi r24 ,'*'
sbrc r26 ,0
ret
ldi r24 ,'0'
sbrc r26 ,1
ret
ldi r24 ,'#'
sbrc r26 ,2
ret
ldi r24 ,'D'
sbrc r26 ,3 ; ai aai a?iae ‘1’?anaeUi?oae oci ret, aeee?o (ai a?iae ‘1’)
ret ; a?eoonYoae ia oii eaoa?unco? r24 oci ASCII oei? oio D.
ldi r24 ,'7'
sbrc r26 ,4
ret
ldi r24 ,'8'
sbrc r26 ,5
ret
ldi r24 ,'9'
sbrc r26 ,6
ret
ldi r24 ,'C'
sbrc r26 ,7
ret
ldi r24 ,'4' ; eiaeeu ‘1’ ooeo eYoaeo oio eaoa?unco? r27 ace?iioi
sbrc r27 ,0 ; oa ?anaeUou oyiaiea eae aneeiiyo
ret
ldi r24 ,'5'
sbrc r27 ,1
ret
ldi r24 ,'6'
sbrc r27 ,2
ret
ldi r24 ,'B'
sbrc r27 ,3
ret
ldi r24 ,'1'
sbrc r27 ,4
ret
ldi r24 ,'2'
sbrc r27 ,5
ret
ldi r24 ,'3'
sbrc r27 ,6
ret
ldi r24 ,'A'
sbrc r27 ,7
ret
clr r24
ret
;==========================================================

wait_msec:
push r24
push r25
ldi r24,low(998)
ldi r25,high(998)
rcall wait_usec
pop r25
pop r24
sbiw r24,1
brne wait_msec
ret

wait_usec:
sbiw r24,1
nop
nop
nop
nop
brne wait_usec
ret

	


